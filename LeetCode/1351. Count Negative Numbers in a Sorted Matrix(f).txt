Given a m x n matrix grid which is sorted in non-increasing order both row-wise and column-wise, return the number of negative numbers in grid.

 

Example 1:

Input: grid = [[4,3,2,-1],[3,2,1,-1],[1,1,-1,-2],[-1,-1,-2,-3]]
Output: 8
Explanation: There are 8 negatives number in the matrix.
Example 2:

Input: grid = [[3,2],[1,0]]
Output: 0
 

Constraints:

m == grid.length
n == grid[i].length
1 <= m, n <= 100
-100 <= grid[i][j] <= 100

***********************************************************************************************************************************

ans:

class Solution {
public:
    int countNegatives(vector<vector<int>>& grid) {
       int r=grid.size();
       int col=grid[0].size(); 
       vector<int>v; 
        int cnt=0;
        for(int i=0;i<r;i++){
            for(int j=0;j<col;j++){
                v.push_back(grid[i][j]);
            }
        }
        sort(v.begin(),v.end());
        for(int i=0;i<v.size();i++){
            if(v[i]<0){
                cnt++;
            }
        }
        return cnt;
    }
};

