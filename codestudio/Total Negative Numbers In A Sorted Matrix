Problem Statement
You are given an ‘N’ x ‘M’ matrix ‘MAT’, which is sorted in non-increasing order both row-wise and column-wise. Your task is to count the number of negative numbers in ‘MAT’.
For Example:
You are given ‘N’ = 3, ‘M’ = 2 and ‘MAT’= [[3, 1],[2, -1],[1, 2]]. Then the answer will be two for the first test case because there are two negative numbers in the given matrix(-1, -2).
Input Format :
The first line of the input contains a single integer 'T', representing the number of test cases.

The first line of each test case contains two space-separated integers, ‘N’ and ‘M’, representing the number of rows and columns in ‘MAT’, respectively.

The next ‘N’ lines contain ‘M’ space-separated integers representing the elements of ‘MAT’.
Output Format:
For each test case, print the number of negative numbers in ‘MAT’.

Print the output of each test case in a separate line.
Note:
You do not need to print anything. It has already been taken care of. Just implement the given function.
Constraints:
1 <= T <= 10
1 <= N <= 5000
1 <= M <= 5000
-10^6 <= MAT[i][j] <= 10^6

Time Limit: 1 sec
Sample Input 1:
2
3 2
3 1 
2 -1
1 -2
3 3
3 2 1
0 -1 -2
-3 -4 -5
Sample Output 1:
2
5
Explanation Of Sample Input 1:
For the first test case, the answer will be two for the first test case because there are two negative numbers in the given matrix(-1, -2).

For the second test case, the answer will be five because there are five negative numbers in the given matrix(-1, -2, -3, -4, -5).
Sample Input 2:
2
2 2
3 -1 
2 -1
2 2
1 1 
1 1
Sample Output 2:
2
0


**************************************************************************************************************
ans:





int countNegativeNumbers(vector<vector<int>> &mat)
{
    // Write your code here.
    
    int row=mat.size();
    int col=mat[0].size();
    int count=0;
    for(int i=0;i<row;i++){
        for(int j=0;j<col;j++){
            if(mat[i][j]<0){
                count++;
            }
        }
    }
    return count;
    
}